{
    "definefont": {
        "prefix": "definefont",
        "body": "definefont",
        "description": "returns:;remarks:"
    },
    "key findfont": {
        "prefix": "findfont",
        "body": "${1:key} findfont",
        "description": "returns:fontdict;remarks:pushes the font dictionary on the stack; error handling unpredictable"
    },
    "fontdict int scalefont": {
        "prefix": "scalefont",
        "body": "${1:fontdict} ${2:int} scalefont",
        "description": "returns:fontdict;remarks:scales the font from 1 to n"
    },
    "makefont": {
        "prefix": "makefont",
        "body": "makefont",
        "description": "returns:;remarks:"
    },
    "fontdict setfont": {
        "prefix": "setfont",
        "body": "${1:fontdict} setfont",
        "description": "returns:-;remarks:sets current font"
    },
    "currentfont": {
        "prefix": "currentfont",
        "body": "currentfont",
        "description": "returns:fontdict;remarks:"
    },
    "string show": {
        "prefix": "show",
        "body": "${1:string} show",
        "description": "returns:-;remarks:prints string at current location in current font"
    },
    "ashow": {
        "prefix": "ashow",
        "body": "ashow",
        "description": "returns:;remarks:"
    },
    "widthshow": {
        "prefix": "widthshow",
        "body": "widthshow",
        "description": "returns:;remarks:"
    },
    "awidthshow": {
        "prefix": "awidthshow",
        "body": "awidthshow",
        "description": "returns:;remarks:"
    },
    "proc string kshow": {
        "prefix": "kshow",
        "body": "${1:proc} ${2:string} kshow",
        "description": "returns:-;remarks:execute proc between showing characters in string"
    },
    "string stringwidth": {
        "prefix": "stringwidth",
        "body": "${1:string} stringwidth",
        "description": "returns:intx inty;remarks:returns location if string were printed"
    },
    "FontDirectory": {
        "prefix": "FontDirectory",
        "body": "FontDirectory",
        "description": "returns:;remarks:"
    },
    "StandardEncoding": {
        "prefix": "StandardEncoding",
        "body": "StandardEncoding",
        "description": "returns:;remarks:"
    },
    "Fonts": {
        "prefix": "commandForFonts",
        "body": "${1|ashow,awidthshow,currentfont,definefont,scalefont,setfont,FontDirectory,findfont,makefont,kshow,StandardEncoding,show,stringwidth,widthshow|}"
    }
}